version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - analytics-net
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CREATE_TOPICS: "analytics:1:1"
    networks:
      - analytics-net

  spark-master:
    container_name: spark-master
    image: docker.io/bitnami/spark:3.3
    hostname: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
       - ./apps:/opt/spark-apps
       - ./apps/setup.sh:/opt/spark-apps/setup.sh
       - ./data:/opt/spark-data
       - ./jars:/opt/spark/jars
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
      - SPARK_EXTRA_CLASSPATH=/opt/spark/jars/*
    command: ["bash", "-c", "/opt/spark-apps/setup.sh"]
    networks:
      - analytics-net
  spark-worker-a:
    image: docker.io/bitnami/spark:3.3
    hostname: spark-worker-a
    container_name: spark-worker-a
    ports:
      - "9091:8080"
      - "7005:7000"
    depends_on:
      - spark-master
    volumes:
       - ./apps:/opt/spark-apps
       - ./apps/setup.sh:/opt/spark-apps/setup.sh
       - ./data:/opt/spark-data
       - ./jars:/opt/spark/jars
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
      - SPARK_EXTRA_CLASSPATH=/opt/spark/jars/*
    command: ["bash", "-c", "/opt/spark-apps/setup.sh"]
    networks:
      - analytics-net
  spark-worker-b:
    image: docker.io/bitnami/spark:3.3
    hostname: spark-worker-b 
    container_name: spark-worker-b
    ports:
      - "9093:8080"
      - "7001:7000"
    depends_on:
      - spark-master
    volumes:
        - ./apps:/opt/spark-apps
        - ./apps/setup.sh:/opt/spark-apps/setup.sh
        - ./data:/opt/spark-data
        - ./jars:/opt/spark/jars
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-b
      - SPARK_EXTRA_CLASSPATH=/opt/spark/jars/*
    command: ["bash", "-c", "/opt/spark-apps/setup.sh"]
    networks:
      - analytics-net


  jupyterlab:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyterlab
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_MASTER=spark://spark-master:7077
    command: start-notebook.sh --NotebookApp.token=''
    volumes:
      - ./apps:/home/jovyan/work
    depends_on:
      - spark-master
      - kafka
    networks:
      - analytics-net

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: analytics_db
      POSTGRES_USER: analytics_user
      POSTGRES_PASSWORD: analytics_pass
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - analytics-net

networks:
  analytics-net:
    driver: bridge

volumes:
  pg_data:
